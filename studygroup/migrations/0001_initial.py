# Generated by Django 5.1.1 on 2025-05-04 11:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Uploaded file attachment', upload_to='chat_attachments/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'gif', 'mp3', 'mp4', 'txt'])], verbose_name='file')),
                ('file_type', models.CharField(choices=[('DOCUMENT', 'Document'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('OTHER', 'Other')], help_text='Type of the attached file', max_length=10, verbose_name='file type')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='When the file was uploaded', verbose_name='uploaded at')),
            ],
            options={
                'verbose_name': 'chat attachment',
                'verbose_name_plural': 'chat attachments',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin - Full management rights'), ('MODERATOR', 'Moderator - Can manage content and members'), ('MEMBER', 'Member - Regular participant')], default='MEMBER', help_text='Role of the user in the group', max_length=10, verbose_name='role')),
                ('joined_at', models.DateTimeField(auto_now_add=True, help_text='When the user joined the group', verbose_name='joined at')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the membership is currently active', verbose_name='is active')),
            ],
            options={
                'verbose_name': 'group membership',
                'verbose_name_plural': 'group memberships',
                'ordering': ['-joined_at'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title or topic of the study session', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the session', verbose_name='description')),
                ('start_time', models.DateTimeField(help_text='When the session starts', verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, help_text='When the session ends', null=True, verbose_name='end time')),
                ('location', models.CharField(blank=True, help_text='Physical or virtual location of the session', max_length=255, verbose_name='location')),
                ('status', models.CharField(choices=[('UPCOMING', 'Upcoming'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='UPCOMING', help_text='Current status of the session', max_length=10, verbose_name='status')),
                ('max_attendees', models.PositiveIntegerField(default=10, help_text='Maximum number of attendees allowed', verbose_name='max attendees')),
                ('is_virtual', models.BooleanField(default=False, help_text='Whether this is a virtual session', verbose_name='is virtual')),
                ('meeting_link', models.URLField(blank=True, help_text='Link for virtual sessions', verbose_name='meeting link')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the session was created', verbose_name='created at')),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the study group', max_length=255, verbose_name='name')),
                ('description', models.TextField(help_text='Detailed description of the group', verbose_name='description')),
                ('avatar', models.ImageField(blank=True, help_text='Group profile picture', null=True, upload_to='group_avatars/%Y/%m/%d/', verbose_name='avatar')),
                ('privacy', models.CharField(choices=[('PUBLIC', 'Public - Anyone can join'), ('PRIVATE', 'Private - Invite only'), ('RESTRICTED', 'Restricted - Request to join')], default='PUBLIC', help_text='Visibility and join permissions for the group', max_length=10, verbose_name='privacy')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the group was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last time the group was updated', verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'study group',
                'verbose_name_plural': 'study groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='color')),
            ],
            options={
                'verbose_name': 'subject',
                'verbose_name_plural': 'subjects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Content of the chat message', verbose_name='message')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the message was sent', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the message was last updated', verbose_name='updated at')),
                ('parent', models.ForeignKey(blank=True, help_text='Original message this is replying to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='studygroup.groupchat', verbose_name='parent message')),
            ],
            options={
                'verbose_name': 'group chat',
                'verbose_name_plural': 'group chats',
                'ordering': ['-created_at'],
            },
        ),
    ]
